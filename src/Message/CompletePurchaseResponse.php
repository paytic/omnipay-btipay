<?php

namespace Paytic\Omnipay\Btipay\Message;

use Paytic\Omnipay\Common\Message\Traits\HtmlResponses\ConfirmHtmlTrait;
use Stev\BTIPay\Util\OrderStatuses;

/**
 * Class PurchaseResponse
 * @package ByTIC\Common\Payments\Gateways\Providers\AbstractGateway\Messages
 */
class CompletePurchaseResponse extends AbstractResponse
{
    use ConfirmHtmlTrait;

    public function isSuccessful()
    {
        return in_array(
            $this->getDataProperty('status'),
            [OrderStatuses::STATUS_DEPOSITED_SUCCESSFULLY]
        );
    }

    /**
     * Is the transaction cancelled by the user?
     *
     * @return boolean
     */
    public function isPending()
    {
        return in_array(
            $this->getDataProperty('status'),
            [OrderStatuses::STATUS_REGISTERED_BUT_NOT_PAID, OrderStatuses::STATUS_AUTH_ACS_INIATED, OrderStatuses::STATUS_PRE_AUTH_HELD]
        );
    }

    /**
     * Is the transaction cancelled by the user?
     *
     * @return boolean
     */
    public function isCancelled()
    {
        return in_array(
            $this->getDataProperty('status'),
            [OrderStatuses::STATUS_AUTH_REVERSED, OrderStatuses::STATUS_REFUNDED, OrderStatuses::STATUS_AUTH_DECLINED]
        );
    }

    /**
     * Response Message
     *
     * @return null|string A response message from the payment gateway
     */
    public function getMessage()
    {
        return $this->getDataProperty('actionCodeDescription');
    }

    /**
     * Response code
     *
     * @return null|string A response code from the payment gateway
     */
    public function getCode()
    {
        return $this->getDataProperty('actionCode');
    }

    /**
     * Gateway Reference
     * @return null|string A reference provided by the gateway to represent this transaction
     */
    public function getTransactionReference()
    {
        return $this->getDataProperty('orderId');
    }

    /**
     * Get the transaction ID as generated by the merchant website.
     *
     * @return string
     */
    public function getTransactionId()
    {
        return $this->getDataProperty('orderNumber');
    }
}
